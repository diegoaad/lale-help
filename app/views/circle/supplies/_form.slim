= form_for [current_circle, @form] do |f|
  - if errors.present?
    .form-introduction.error
      p= t('error_correction')


  .field-row.single
    .field.required class=errors.css(:name)
      = f.label :name
      = f.text_field :name, placeholder: true
      = errors.formatted_message_for(:name)

  .field-row.single
    .field.required class=errors.css(:description)
      = f.label :description
      = f.text_area :description
      = errors.formatted_message_for(:description)

  .field-row
    .field.required class=errors.css(:due_date)
      = f.label :due_date
      = f.text_field :due_date, type: :date, min: Time.now.strftime("%Y-%m-%d")
      = errors.formatted_message_for(:due_date)

    .field class=errors.css(:location)
      = f.label :location
      = f.text_field :location
      = errors.formatted_message_for(:location)

  .field-row
    .field.required class=errors.css(:working_group)
      = f.label :working_group_id
      - unless @form.working_group_disabled?
        = f.collection_select :working_group_id, @form.available_working_groups, :id, :name
        = errors.message_for(:working_group)
      - else
        = f.hidden_field :working_group_id
        = text_field_tag :disabled, @form.working_group.name, disabled: true


    .field.required class=errors.css(:organizer_id)
      = f.label :organizer_id
      = f.grouped_collection_select(:organizer_id, @form.available_working_groups, :users, :name, :id, :name)
      = errors.message_for(:organizer_id)

  .field-row
    .field
      = f.label :project_id
      = taskable_project_select(@form.available_projects, selected_project: @form.project, tag_id: 'supply_project_id', tag_name: 'supply[project_id]')
      = errors.message_for(:project_id)

  .submit-row
    = f.submit
    - cancel_path = @form.supply.persisted? ? circle_supply_path(current_circle, current_supply) : circle_path(current_circle)
    = link_to t('supply_edit.cancel'), cancel_path