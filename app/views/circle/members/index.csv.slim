- line_options = { encoding: 'utf-8', force_quotes: true }

- header = []
- header << User.human_attribute_name(:first_name)
- header << User.human_attribute_name(:last_name)
- header << User.human_attribute_name(:email)
- header << User.human_attribute_name(:language)
- header << User.human_attribute_name(:mobile_phone)
- header << User.human_attribute_name(:home_phone)
- header << User.human_attribute_name(:street_address)
- header << User.human_attribute_name(:city)
- header << User.human_attribute_name(:state_province)
- header << User.human_attribute_name(:postal_code)
- header << User.human_attribute_name(:country)
- header << User.human_attribute_name(:working_groups)

- if controller.controller_name == 'members'
  - header <<  User.human_attribute_name(:created_at)
  - if can?(:edit_accreditation, members.first, current_circle)
    - header << User.human_attribute_name(:accredited_until)
- header << User.human_attribute_name(:last_login)
- if can?(:manage, current_circle) && controller.controller_name == 'members'
  - header << t('circle.members.list.help_provided')
  - header << t('circle.members.list.last_help_provided')

= CSV.generate_line(header, line_options).html_safe

- members.each do |user|
  - presenter = MemberPresenter.new(user, self, circle: current_circle)
  - line = []
  - line << user.first_name
  - line << user.last_name
  - line << user.identity.email
  - line << user.language
  - line << user.mobile_phone
  - line << user.home_phone
  - line << user.address.street_address_1
  - line << user.address.city
  - line << user.address.state_province
  - line << user.address.postal_code
  - line << user.address.country
  - line << user.working_groups.for_circle(current_circle).map { |wg| (wg.name) }.join("; ")

  - if controller.controller_name == 'members'
    - line << presenter.member_since(format: :default)
    - if can?(:edit_accreditation, presenter.model, current_circle)
      - line << presenter.accredited_until(format: :default)

  - line << presenter.last_login(format: :default)

  - if can?(:manage, current_circle) && controller.controller_name == 'members'
    - line << presenter.help_provided_count
    / the value can be nil, then we need to add an empty string to the CSV for correct formatting.
    - line << presenter.last_helped_at.to_s
  = CSV.generate_line(line, line_options).html_safe
